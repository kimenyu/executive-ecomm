version: "3.8"

services:
  db:
    image: postgres:15
    container_name: executive_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: strongpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./cmd/migrate/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: executive_redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  goapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: executive_go
    depends_on:
      - db
      - redis
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgres://ecommerce_user:strongpassword@db:5432/ecommerce?sslmode=disable
      REDIS_ADDR: redis:6379

  mpesa-service:
    build:
      context: ./mpesa-service
      dockerfile: Dockerfile
    container_name: mpesa_service
    depends_on:
      - goapp
    ports:
      - "5000:5000"

volumes:
  postgres_data:
  redis_data:
